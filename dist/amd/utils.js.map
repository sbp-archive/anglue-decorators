{"version":3,"sources":["src/utils.js"],"names":[],"mappings":";;;;;;;;;;;QAAa,cAAc,WAAd,cAAc;iBAAd,cAAc;kCAAd,cAAc;;;qBAAd,cAAc;AAChB,yBAAa;uBAAA,uBAAC,GAAG,EAAE,aAAa,EAAE;AACrC,wBAAI,kBAAkB,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAC5E,wBAAI,mBAAmB,GAAG,kBAAkB,CAAC,GAAG,CAAC;;AAEjD,0BAAM,CAAC,cAAc,CAAC,GAAG,EAAE,YAAY,EAAE;AACrC,2BAAG,EAAE,YAAM;AACP,gCAAI,UAAU,GAAG,mBAAmB,EAAE,CAAC;;;;;;AACvC,qDAAoB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;wCAArC,OAAO;;AACZ,wCAAI,UAAU,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;AACnC,kDAAU,CAAC,OAAO,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;qCAChD;iCACJ;;;;;;;;;;;;;;;;AACD,mCAAO,UAAU,CAAC;yBACrB;qBACJ,CAAC,CAAC;iBACN;;AAEM,qBAAS;uBAAA,mBAAC,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE;AACzC,0BAAM,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE;AACnC,oCAAY,EAAE,IAAI;AAClB,iCAAS,EAAE,IAAI;AACf,6BAAK,EAAE,CAAC,UAAS,cAAc,EAAE;AAC7B,gCAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1C,gCAAI,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC1D,gCAAI,cAAc,YAAY,QAAQ,EAAE;AACpC,oCAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB,sCAAM,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;6BAC5C;AACD,mCAAO,MAAM,CAAC;yBACjB,CAAA,CAAE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;qBACtC,CAAC,CAAC;iBACN;;AAEM,oBAAQ;uBAAA,kBAAC,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE;AACxC,0BAAM,CAAC,cAAc,CAAC,GAAG,EAAE,UAAU,EAAE;AACnC,oCAAY,EAAE,IAAI;AAClB,iCAAS,EAAE,IAAI;AACf,6BAAK,EAAE,CAAC,UAAS,cAAc,EAAE;AAC7B,gCAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1C,gCAAI,cAAc,YAAY,QAAQ,EAAE;AACpC,oCAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;6BAC9C;AACD,mCAAO,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;yBACvD,CAAA,CAAE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC;qBACtC,CAAC,CAAC;iBACN;;;;eA9CQ,cAAc;;;yBAiDZ,cAAc","file":"src/utils.js","sourcesContent":["export class DecoratorUtils {\n    static addInjections(cls, newInjections) {\n        var injectionsProperty = Object.getOwnPropertyDescriptor(cls, 'injections');\n        var oldInjectionsGetter = injectionsProperty.get;\n\n        Object.defineProperty(cls, 'injections', {\n            get: () => {\n                var injections = oldInjectionsGetter();\n                for (let binding of Object.keys(newInjections)) {\n                    if (injections[binding] === undefined) {\n                        injections[binding] = newInjections[binding];\n                    }\n                }\n                return injections;\n            }\n        });\n    }\n\n    static intercept(obj, decorator, methodName) {\n        Object.defineProperty(obj, methodName, {\n            configurable: true,\n            writeable: true,\n            value: (function(originalMethod) {\n                var args = Array.from(arguments).slice(1);\n                var retVal = decorator[methodName].apply(decorator, args);\n                if (originalMethod instanceof Function) {\n                    args.push(retVal);\n                    retVal = originalMethod.apply(obj, args);\n                }\n                return retVal;\n            }).bind(decorator, obj[methodName])\n        });\n    }\n\n    static sequence(obj, decorator, methodName) {\n        Object.defineProperty(obj, methodName, {\n            configurable: true,\n            writeable: true,\n            value: (function(originalMethod) {\n                var args = Array.from(arguments).slice(1);\n                if (originalMethod instanceof Function) {\n                    args.push(originalMethod.apply(obj, args));\n                }\n                return decorator[methodName].apply(decorator, args);\n            }).bind(decorator, obj[methodName])\n        });\n    }\n}\n\nexport default DecoratorUtils;\n"]}